<mahApps:MetroWindow
    x:Class="LambdaTemplateGenerator.Views.MainWindow"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:dlg="clr-namespace:MahApps.Metro.Controls.Dialogs;assembly=MahApps.Metro"
    dlg:DialogParticipation.Register="{Binding}"
    Background="{DynamicResource MaterialDesignPaper}"
    BorderThickness="1"
    FontFamily="pack:application,,,/MaterialDesignThemes.Wpf;conponent/Resources/Roboto/#Roboto"
    GlowBrush="{DynamicResource AccentColorBrush}"
    TextElement.FontSize="16"
    TextElement.FontWeight="Regular"
    TextElement.Foreground="{DynamicResource MaterialDesignBody}"
    TextOptions.TextFormattingMode="Ideal"
    TextOptions.TextRenderingMode="Auto"
    xmlns:avalon="http://icsharpcode.net/sharpdevelop/avalonedit"
    xmlns:b="http://schemas.microsoft.com/xaml/behaviors"
    xmlns:mahApps="http://metro.mahapps.com/winfx/xaml/controls"
    xmlns:markdig="clr-namespace:Markdig.Wpf;assembly=Markdig.Wpf"
    xmlns:wpf="http://materialdesigninxaml.net/winfx/xaml/themes"
    xmlns:l="http://schemas.livet-mvvm.net/2011/wpf"
    xmlns:v="clr-namespace:LambdaTemplateGenerator.Views"
    xmlns:vm="clr-namespace:LambdaTemplateGenerator.ViewModels"
    WindowStartupLocation="CenterScreen"
    WindowState="Maximized"
    >

    <b:Interaction.Triggers>
        <!--  When ContentRendered event raised, Initialize method of ViewModel would be called.  -->
        <b:EventTrigger EventName="ContentRendered">
            <l:LivetCallMethodAction MethodName="Initialize" MethodTarget="{Binding}" />
        </b:EventTrigger>

        <!--  Dispose method is called, when Window closing.  -->
        <b:EventTrigger EventName="Closed">
            <l:DataContextDisposeAction />
        </b:EventTrigger>

        <!--  If you make user choose 'OK or Cancel' closing Window, then please use Window Close cancel Behavior.  -->

    </b:Interaction.Triggers>

    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="*"/>
        </Grid.RowDefinitions>
        <ToolBar>
            
        </ToolBar>
        <Grid Grid.Row="1">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="5"/>
                <ColumnDefinition Width="Auto"/>
            </Grid.ColumnDefinitions>
            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="*"/>
                    <RowDefinition Height="5"/>
                    <RowDefinition Height="*"/>
                </Grid.RowDefinitions>
                <wpf:Card Margin="4">
                    <GroupBox Header="Lambda">
                        <v:LambdaInfoBox DataContext="{Binding LambdaInfoBoxViewModel}"/>
                    </GroupBox>
                </wpf:Card>
                <wpf:Card Grid.Row="1" Margin="4">
                    <GroupBox Header="リクエスト">
                        <v:AppSyncRequestBox DataContext="{Binding AppSyncRequestBoxViewModel}"/>
                    </GroupBox>
                </wpf:Card>
                <GridSplitter Grid.Row="2" Height="5" HorizontalAlignment="Stretch" VerticalAlignment="Stretch"/>
                <wpf:Card Grid.Row="3" Margin="4">
                    <GroupBox Header="レスポンス">
                        <v:AppSyncResponseBox DataContext="{Binding AppSyncResponseBoxViewModel}"/>
                    </GroupBox>
                </wpf:Card>
            </Grid>
            <GridSplitter Grid.Column="1" Width="5" HorizontalAlignment="Stretch" VerticalAlignment="Stretch"/>
            <wpf:Card Grid.Column="2" Margin="4">
                <TabControl Style="{StaticResource MaterialDesignFilledTabControl}">
                    <TabControl.Resources>
                        <Style TargetType="{x:Type TabItem}" BasedOn="{StaticResource MaterialDesignTabItem}">
                            <Setter Property="HeaderTemplate">
                                <Setter.Value>
                                    <DataTemplate>
                                        <ContentPresenter Content="{TemplateBinding Content}" Height="48" />
                                    </DataTemplate>
                                </Setter.Value>
                            </Setter>
                            <Setter Property="VerticalContentAlignment" Value="Center"/>
                            <Setter Property="Padding" Value="3" />
                            <Setter Property="Margin" Value="4"/>
                        </Style>
                    </TabControl.Resources>
                    <TabItem Header="手順">
                        <markdig:MarkdownViewer Markdown="{Binding ReadmeText}" />
                    </TabItem>
                    <TabItem Header="Lambda">
                        <avalon:TextEditor Document="{Binding LambdaSourceDocument}" ShowLineNumbers="True" SyntaxHighlighting="C#"/>
                    </TabItem>
                    <TabItem Header="AppSyncスキーマ">
                        <avalon:TextEditor Document="{Binding AppSyncSchemaDocument}" ShowLineNumbers="True" SyntaxHighlighting="JSON"/>
                    </TabItem>
                    <TabItem Header="GraphQL">
                        <avalon:TextEditor Document="{Binding GraphQLDocument}" ShowLineNumbers="True"/>
                    </TabItem>
                    <TabItem Header="リクエスト&#xa;マッピングテンプレート">
                        <avalon:TextEditor Document="{Binding RequestMappingTemplateDocument}" ShowLineNumbers="True"/>
                    </TabItem>
                    <TabItem Header="レスポンス&#xa;マッピングテンプレート">
                        <avalon:TextEditor Document="{Binding ResponseMappingTemplateDocument}" ShowLineNumbers="True"/>
                    </TabItem>
                </TabControl>
            </wpf:Card>
        </Grid>
    </Grid>
</mahApps:MetroWindow>